// <auto-generated />
using System;
using DesafioTaskrow.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioTaskrow.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.GrupoSolicitante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GrupoSolicitantePaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoSolicitantePaiId");

                    b.HasIndex("Id");

                    b.ToTable("GruposSolicitantes", (string)null);
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.LimiteGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<Guid>("GrupoSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LimiteMensal")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoSolicitacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrupoSolicitanteId");

                    b.HasIndex("Id");

                    b.HasIndex("TipoSolicitacaoId");

                    b.ToTable("LimitesGrupos", (string)null);
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detalhes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Erro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.Solicitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GrupoSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoSolicitacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrupoSolicitanteId");

                    b.HasIndex("Id");

                    b.HasIndex("TipoSolicitacaoId");

                    b.ToTable("Solicitacoes", (string)null);
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.TipoSolicitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("TiposSolicitacoes", (string)null);
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.GrupoSolicitante", b =>
                {
                    b.HasOne("DesafioTaskrow.Domain.Models.GrupoSolicitante", "GruposSolicitantePai")
                        .WithMany("GrupoSolicitanteFilhos")
                        .HasForeignKey("GrupoSolicitantePaiId");

                    b.Navigation("GruposSolicitantePai");
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.LimiteGrupo", b =>
                {
                    b.HasOne("DesafioTaskrow.Domain.Models.GrupoSolicitante", "GrupoSolicitante")
                        .WithMany("LimitesGrupos")
                        .HasForeignKey("GrupoSolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioTaskrow.Domain.Models.TipoSolicitacao", "TipoSolicitacao")
                        .WithMany("LimitesGrupos")
                        .HasForeignKey("TipoSolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoSolicitante");

                    b.Navigation("TipoSolicitacao");
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.Solicitacao", b =>
                {
                    b.HasOne("DesafioTaskrow.Domain.Models.GrupoSolicitante", "GrupoSolicitante")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("GrupoSolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioTaskrow.Domain.Models.TipoSolicitacao", "TipoSolicitacao")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("TipoSolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoSolicitante");

                    b.Navigation("TipoSolicitacao");
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.GrupoSolicitante", b =>
                {
                    b.Navigation("GrupoSolicitanteFilhos");

                    b.Navigation("LimitesGrupos");

                    b.Navigation("Solicitacoes");
                });

            modelBuilder.Entity("DesafioTaskrow.Domain.Models.TipoSolicitacao", b =>
                {
                    b.Navigation("LimitesGrupos");

                    b.Navigation("Solicitacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
